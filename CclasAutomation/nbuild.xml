<project name="BootSeleniumNode" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>Start up the specified number of RCs on a Selenium Grid node</description>

  <taskdef resource="net/sf/antcontrib/antlib.xml"/>

  <property name="hubPollerIntervalInSeconds" value="30" />

  <property name="rc.base.port" value="5550"/>
  <property name="num.rcs.per.node" value="5"/>

  <property name="environment" value="*firefox"/>
  <property name="selenium.user.extensions" value="${basedir}/user-extensions.js"/>
  
  <path id="remote.control.classpath">
    <fileset dir="${basedir}/lib">
      <include name="selenium-server-*.jar"/>
    </fileset>
    <fileset dir="${basedir}/lib">
      <include name="selenium-grid-remote-control-standalone.jar"/>
    </fileset>
    <pathelement path="${java.class.path}/"/>
  </path>

  <target name="sanity-check" description="Check that the tools are been installed and configured properly">
    <echo>${ant.version}</echo>
    <condition property="ant-7">
      <antversion atleast="1.7.0"/>
    </condition>
    <fail message="You need Ant 1.7 or newer" unless="ant-7"/>

    <echo>Java ${ant.java.version}</echo>
    <condition property="java-5">
      <not><matches pattern="^1\.[0-4]" string="${ant.java.version}"/></not>
    </condition>
    <fail message="Your must use Java 1.5 or newer. You are currently using '${ant.java.version}'." unless="java-5"/>

  </target>

  <target name="unzip.rc.code">
    <unzip src="${basedir}/grid.zip" dest="${basedir}"/>
  </target>

  <!-- generate a list of ports given a base port (rc.base.port) and the required number of ports (num.rcs.per.node) -->
  <target name="generate.port.list">
    <script language="javascript"> <![CDATA[

    project = self.getProject();
    sp = parseInt(project.getProperty("rc.base.port"));
    limit = parseInt(project.getProperty("num.rcs.per.node"));

    plist = "" + sp++;

    for (i=1 ; i < limit ; i++, sp++) {
       plist = plist + "," + sp;
    }

    project.setProperty("rc.portlist", plist);

    ]]> </script>

  </target>
  
  <!-- launch rcs on a rc.node - normally executed on the rc.node, but can be executed anywhere if selenium.rc.host set -->
  <target name="launch.remote.controls" depends="unzip.rc.code,generate.port.list,shutdown.remote.controls">
    <foreach target="launch.remote.control" 
	     maxthreads="${num.rcs.per.node}" 
	     inheritall="true" 
	     inheritrefs="true" 
	     parallel="true" 
	     param="rc.port" 
	     list="${rc.portlist}" />
  </target>

  <!-- launch an rc - executed on rc.node node -->
  <target name="launch.remote.control" description="Launch A Remote Control">
    <mkdir dir="${basedir}/rc-${rc.port}"/>

    <java classpathref="remote.control.classpath"
          classname="com.thoughtworks.selenium.grid.remotecontrol.SelfRegisteringRemoteControlLauncher"
          fork="true"
	  spawn="true">

      <sysproperty key="http.proxyHost" value="${http.proxyHost}"/>
      <sysproperty key="http.proxyPort" value="${http.proxyPort}"/>
      <sysproperty key="https.proxyHost" value="${https.proxyHost}"/>
      <sysproperty key="https.proxyPort" value="${https.proxyPort}"/>

      <arg value="-port"/>
      <arg value="${rc.port}"/>
      <arg value="-host"/>
      <arg value="${selenium.rc.host}"/>
      <arg value="-hubURL"/>
      <arg value="${selenium.hub.URL}"/>
      <arg value="-env"/>
      <arg value="${environment}"/>
      <arg value="-hubPollerIntervalInSeconds"/>
      <arg value="${hubPollerIntervalInSeconds}"/>
      <arg line="-userExtensions ${selenium.user.extensions} -singleWindow -log ${basedir}/rc-${rc.port}/selenium.log"/>
    </java>

  </target>

  <!-- shutdown rcs on a rc.node - executed on the rc.node -->
  <target name="shutdown.remote.controls"  depends="generate.port.list">
    <foreach target="shutdown.remote.control" 
	     maxthreads="${num.rcs.per.node}" 
	     inheritall="true" 
	     inheritrefs="true" 
	     parallel="true" 
	     param="rc.port" 
	     list="${rc.portlist}" />
  </target>

  <!-- shutdown an rc - can be executed anywhere as long as selenium.rc.host and port are specified.
       side-effect: writes the result in ${basedir}/rc-${port}/shutdown-result.txt -->
  <target name="shutdown.remote.control">
    <mkdir dir="${basedir}/rc-${rc.port}"/>

    <get src="http://${selenium.rc.host}:${rc.port}/selenium-server/driver/?cmd=shutDownSeleniumServer"
	 dest="${basedir}/rc-${rc.port}/shutdown-result.txt"
         ignoreerrors="true" />

  </target>

</project>
